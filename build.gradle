plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '2.8'
}
def app = [
    group: 'com.academy.redbee',
    name: 'ms-test',
    version: '0.0.1',
    versionType: 'SNAPSHOT'
]
group = 'io.redbee'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2:1.4.196'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

sonarqube {
	properties {
		//  Encoding
		property "sonar.sourceEncoding", "UTF-8"
		//  Reports
		property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/jacoco/jacoco.xml"
		property "sonar.java.coveragePlugin", "jacoco"
		//  Binaries
		// property "sonar.java.binaries", s"${buildDir}/classes/java/main"
		property "sonar.groovy.test.binaries", "${project.buildDir}/classes/groovy/test"
		// Exclusions
	}
}

test {
	useJUnitPlatform()
}
